'''
풀이

무한한 크기의 이차원 평면에 기울기가 -1, 0, 1의 N개의 직선으로 분할할 수 있는 최대 영역의 개수를 묻는 문제이다.
이는 즉, \, -, /의 선으로 만들 수 있는 공간의 최댓값을 묻는 문제이다.

선 1개로는 2개의 공간을, 선 2개로는 4개의 공간을 만들 수 있는데, 선 3개부터는 7개의 공간까지 만들어진다.
그 이유는 \, -, /을 하나씩 사용하면 삼각형 하나를 만들 수 있기 때문에 추가적인 공간 1개가 만들어지는 것이다.
즉 정리하자면, 우선 선이 한 개 늘어날 때마다 최대 2개의 공간을 더 만들 수 있다.
그 이유는 선이 하나일 때 2개의 공간을 만들 수 있는데, 그 뒤로 선을 추가하면 각 공간 별로 두 개씩 쪼개지므로 총 2개의 공간이 더 생긴다고 볼 수 있다.
거기에 추가적으로 세 선에 의해 만들어지는 공간을 추가하면 된다.

선이 만들어지려면 두 가지 조건이 필요한데,
    1. 선이 적어도 3개 이상 필요하다.
    2. 세 선의 기울기가 모두 달라야 한다.
게다가 사각형의 공간이더라도 사각형을 이루는 선분 중 하나는 무조건 삼각형을 이루게 된다.
따라서 그 삼각형과 사각형을 합치면 큰 삼각형의 형태로 나타낼 수 있게 된다.

결론적으로, 공간의 총 개수는 (큰 공간을 쪼갠 공간의 개수) + (삼각형으로 나타낼 수 있는 작은 공간의 개수)이므로,
기울기가 -1, 0, 1인 직선의 개수를 각각 x, y, z라고 할 때, 
(x + y + z) * 2 + xC1 * yC1 * zC1 = 2x + 2y + 2z + xyz로 나타낼 수 있게 된다.
'''

# 직선의 개수 입력
n = int(input())

# 기울기가 각각 -1, 0, 1인 직선의 개수 설정
x = n // 3 + int(n % 3 != 0)
y = n // 3 + int(n % 3 == 2)
z = n // 3

# 공간의 총 개수 출력
print((x + y + z) * 2 + x * y * z)